name: master-build

on:
  push:
    branches:
      - develop

env:
  USER: ${{ secrets.USER }}
  DOCKER_IMAGE: "odyssey-docker"
  ODYSSEY_GIT_REPO: "yandex/odyssey"
  DOCKER_REG_GIT: "docker.pkg.github.com"
  DOCKER_REPO_GIT: "odyssey-docker/odyssey"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@master
    - name: Get odyssey release version
      run: |
        echo ::set-env name=RELEASE_VERSION::$(echo $(curl --silent https://api.github.com/repos/${ODYSSEY_GIT_REPO}/releases/latest | grep '"tag_name":' | cut -d'"' -f4))
    - name: Build image
      run: docker build --build-arg ODYSSEY_VERSION=${RELEASE_VERSION} -t ${DOCKER_IMAGE}:${{ github.job }} .
    - name: Set image tags
      run: |
        docker tag ${DOCKER_IMAGE}:${{ github.job }} ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${RELEASE_VERSION}
        docker tag ${DOCKER_IMAGE}:${{ github.job }} ${USER}/${DOCKER_IMAGE}:${RELEASE_VERSION}
    - name: Push image to GitHub Packages
      run: |
        docker login docker.pkg.github.com -u ${USER} -p ${GITHUB_TOKEN}
        docker push ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${RELEASE_VERSION}
        docker logout
    - name: Push image to DockerHub
      run: |
        docker login -u ${USER} -p ${DOCKERHUB_TOKEN}
        docker push ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${RELEASE_VERSION}
        docker logout