name: build

on:
  repository_dispatch:
    types: [build]

env:
  USER: "kksudo"
  DOCKER_IMAGE: "odyssey-docker"
  ODYSSEY_GIT_REPO: "yandex/odyssey"
  DOCKER_REG_GIT: "docker.pkg.github.com"
  DOCKER_REPO_GIT: "odyssey-docker/odyssey"

jobs:
  main-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@master
    - name: Get odyssey release version
      run: |
        echo ::set-env name=RELEASE_VERSION::$(echo $(curl --silent https://api.github.com/repos/${ODYSSEY_GIT_REPO}/releases/latest | grep '"tag_name":' | cut -d'"' -f4))
    - name: Build image
      run: docker build --build-arg ODYSSEY_VERSION=${RELEASE_VERSION} -t ${DOCKER_IMAGE}:${{ github.run_number }} .
    - name: Set image tags
#      TODO: move tags to variables, then foreach tag
      run: |
        docker tag ${DOCKER_IMAGE}:${{ github.run_number }} ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${RELEASE_VERSION}
        docker tag ${DOCKER_IMAGE}:${{ github.run_number }} ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${{ github.run_number }}
        docker tag ${DOCKER_IMAGE}:${{ github.run_number }} ${USER}/${DOCKER_IMAGE}:${RELEASE_VERSION}
        docker tag ${DOCKER_IMAGE}:${{ github.run_number }} ${USER}/${DOCKER_IMAGE}:${{ github.run_number }}
    - name: Push image to GitHub Packages
      run: |
        docker login docker.pkg.github.com -u ${USER} -p ${{secrets.GH_TOKEN}}
        docker push ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${RELEASE_VERSION}
        docker push ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${{ github.run_number }}
        docker logout ${DOCKER_REG_GIT}
        echo "The docker image ${DOCKER_REG_GIT}/${USER}/${DOCKER_REPO_GIT}:${RELEASE_VERSION} successfully pushed pushed"
#   TODO: implement hook for build image in DockerHub
#    - name: Push image to DockerHub
#      run: |
#        docker login -u ${USER} -p ${{secrets.DOCKERHUB_TOKEN}}
#        docker push ${USER}/${DOCKER_IMAGE}:${RELEASE_VERSION}
#        docker push ${USER}/${DOCKER_IMAGE}:${{ github.run_number }}
#        docker logout
#        echo "The docker image ${USER}/${DOCKER_IMAGE}:${RELEASE_VERSION} successfully pushed pushed"
